version: '2'

environment:
  RAILS_ENV: development

compose:
  files:
    - docker-compose-dev.yml

interaction:
  bash:
    service: rails
    command: /bin/bash
    compose:
      run_options: [no-deps]

  bundle:
    service: rails
    command: bin/bundle
    compose:
      run_options: [no-deps]

  bundle_no_tty:
    service: rails
    command: bundle
    compose_run_options: [no-deps -T]

  rake:
    service: rails
    command: bundle exec rake

  rails:
    service: rails
    command: bundle exec rails

  ruby:
    service: rails
    command: ruby

# [service-ports] - DIP `use` run instead of `exec` they have different behavior:
# that the docker-compose run command does not create any of the ports specified in the service configuration.
# This prevents port collisions with already-open ports.
  yarn:
    service: rails
    command: yarn
    compose:
      run_options: [no-deps]
# We use no-deps for don't start linker container
# https://docs.docker.com/compose/reference/run/
  yarn_no_tty:
    service: rails
    command: yarn
    compose_run_options: [no-deps -T]

  rspec:
    service: rails
    environment:
      RAILS_ENV: test
    command: bundle exec rspec
    compose:
      run_options: ['-p 3001:3001']

  rspec_no_tty:
    service: rails
    environment:
      RAILS_ENV: test
    command: bundle exec rspec
    compose:
      run_options: ['-p 3001:3001']

  crystalball:
    service: rails
    environment:
      RAILS_ENV: test
    command: bundle exec crystalball
    compose:
      run_options: ['-p 3001:3001']


  crystalball_no_tty:
    service: rails
    environment:
      RAILS_ENV: test
    command: bundle exec crystalball
    compose:
      run_options: [-T]
    compose:
      run_options: ['-p 3001:3001']

  database_consistency:
    service: rails
    environment:
      RAILS_ENV: test
    command: bundle exec database_consistency

  database_consistency_no_tty:
    service: rails
    environment:
      RAILS_ENV: test
    command: bundle exec database_consistency
    compose:
      run_options: [-T]

  standard:
    service: rails
    command: yarn standard
    compose:
      run_options: [no-deps]

  standardrb:
    service: rails
    command: bundle exec standardrb
    compose:
      run_options: [no-deps]

  psql:
    service: postgres
    command: psql -h postgres -U postgres -d ohmuritel_development

  'redis-cli':
    service: redis
    command: redis-cli -h redis

provision:
  - dip compose down --volumes
  - dip compose up -d postgres redis elasticsearch
  - dip yarn install
  - dip bash -c ./bin/setup
