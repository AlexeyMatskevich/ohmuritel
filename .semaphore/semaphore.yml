version: v1.0
name: Semaphore Python / Flask / Docker Example Pipeline
agent:
  machine:
    # Use a machine type with more RAM and CPU power for faster container
    # builds:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: Build
    task:
      # Mount a secret which defines DOCKER_USERNAME and DOCKER_PASSWORD
      # environment variables.
      # For info on creating secrets, see:
      # https://docs.semaphoreci.com/article/66-environment-variables-and-secrets
      secrets:
        - name: dockerhub-secrets
      jobs:
        - name: Docker build
          commands:
            # Authenticate with Docker Hub
            - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
            - checkout
            - docker-compose build
            - docker tag ohmuritel:1.0.1 "$DOCKER_USERNAME"/ohmuritel:1.0.1
            - docker tag ohmuritel:1.0.1 "$DOCKER_USERNAME"/ohmuritel:$SEMAPHORE_WORKFLOW_ID
            - docker push "$DOCKER_USERNAME"/ohmuritel:1.0.1
            - docker push "$DOCKER_USERNAME"/ohmuritel:$SEMAPHORE_WORKFLOW_ID

  - name: Lint & Secure
      task:
        # Mount a secret which defines DOCKER_USERNAME and DOCKER_PASSWORD
        # environment variables.
        # For info on creating secrets, see:
        # https://docs.semaphoreci.com/article/66-environment-variables-and-secrets
        secrets:
            - name: dockerhub-secrets
        prologue:
          commands:
            # Authenticate with Docker Hub
            - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
            - docker pull "$DOCKER_USERNAME"/ohmuritel
        jobs:
          - name: Frontend lint
            commands:
              - docker-compose -f docker-compose-test.yml run node yarn standard --verbose | yarn snazzy && yarn audit
          - name: Backend lint
            commands:
              - docker-compose -f docker-compose-test.yml run --no-deps rails bundle exec rails standardrb | yarn snazzy
          - name: Yarn audit
            commands:
              - docker-compose -f docker-compose-test.yml run node yarn audit
          - name: Bundle audit
            commands:
              - docker-compose -f docker-compose-test.yml run --no-deps rails bundle audit check --update
          - name: Brakeman
            commands:
              - docker-compose -f docker-compose-test.yml run --no-deps rails bundle exec brakeman

  - name: Spec && DB lint
    task:
      # Mount a secret which defines DOCKER_USERNAME and DOCKER_PASSWORD
      # environment variables.
      # For info on creating secrets, see:
      # https://docs.semaphoreci.com/article/66-environment-variables-and-secrets
      secrets:
        - name: dockerhub-secrets
      prologue:
        commands:
          # Authenticate with Docker Hub
          - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
          - docker pull "$DOCKER_USERNAME"/ohmuritel
          - docker-compose -f docker-compose-test.yml run rails bundle exec rails db:create
          - docker-compose -f docker-compose-test.yml run rails bundle exec rails db:schema:load
      jobs:
        - name: DB lint
          commands:
            - docker-compose -f docker-compose-test.yml run rails bundle exec database_consistency
        - name: Rspec
          commands:
            - docker-compose -f docker-compose-test.yml run rails bundle exec rspec
        - name: Yarn audit
          commands:
            - docker-compose -f docker-compose-test.yml run rails bundle exec rails standardrb | yarn snazzy
promotions:
  - name: Deploy to Heroku
    pipeline_file: deploy-heroku.yml